/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package koperasi;

import java.awt.event.KeyEvent;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;

import java.sql.SQLException;

/**
 *
 * @author Mochamad Ridwan
 */
public class FormUser extends javax.swing.JFrame {
        public DefaultTableModel model;

    Connection con;
    Statement stat;
    ResultSet rs;
    String sql;

    /**
     * Creates new form FormUser
     */
    public FormUser() {
        initComponents();
        judul_table();
        KoneksiDB konek = new KoneksiDB();

        konek.config();
        con = konek.con;
        stat = konek.stm;
        aturKolomTabel();
        getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void judul_table() {
        model = new DefaultTableModel();
        jTableUser.setModel(model);

        model.addColumn("Kode User");
        model.addColumn("Nama User");
        model.addColumn("Password");
        model.addColumn("Role");
        model.addColumn("Date Create");
        model.addColumn("Date Modify");
        model.addColumn("User Modify");
        model.addColumn("Flag");
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        TxtKodeUser = new javax.swing.JTextField();
        btnBatal = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        TxtNamaUser = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        TxtPassword = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUser = new javax.swing.JTable();
        TxtPassCon = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        btnHapus = new javax.swing.JToggleButton();
        btnKeluar = new javax.swing.JToggleButton();
        btnUbah = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnTambah = new javax.swing.JButton();
        JboRole = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TxtKodeUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtKodeUserActionPerformed(evt);
            }
        });
        TxtKodeUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtKodeUserKeyPressed(evt);
            }
        });

        btnBatal.setFont(new java.awt.Font("Menlo", 1, 12)); // NOI18N
        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Menlo", 1, 12)); // NOI18N
        jLabel3.setText("Nama User:");

        TxtNamaUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtNamaUserKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Menlo", 1, 12)); // NOI18N
        jLabel4.setText("Password:");

        jLabel1.setFont(new java.awt.Font("Menlo", 1, 36)); // NOI18N
        jLabel1.setText("Maintenance User");

        TxtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtPasswordActionPerformed(evt);
            }
        });
        TxtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtPasswordKeyPressed(evt);
            }
        });

        jTableUser.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        jTableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUser);

        TxtPassCon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtPassConKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Menlo", 1, 12)); // NOI18N
        jLabel5.setText("Confirm Password");

        btnSimpan.setFont(new java.awt.Font("Menlo", 1, 12)); // NOI18N
        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Menlo", 1, 12)); // NOI18N
        jLabel6.setText("Role:");

        btnHapus.setFont(new java.awt.Font("Menlo", 1, 12)); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnKeluar.setFont(new java.awt.Font("Menlo", 1, 12)); // NOI18N
        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        btnUbah.setFont(new java.awt.Font("Menlo", 1, 12)); // NOI18N
        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Menlo", 1, 12)); // NOI18N
        jLabel2.setText("Kode User:");

        btnTambah.setFont(new java.awt.Font("Menlo", 1, 12)); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        JboRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrator", "Operator", "Staff IT" }));
        JboRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JboRoleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TxtKodeUser, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(TxtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(65, 65, 65)
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(TxtPassCon))
                        .addComponent(TxtNamaUser, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(JboRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 75, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSimpan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBatal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(38, 38, 38)
                        .addComponent(btnUbah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(188, 188, 188))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtKodeUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(TxtNamaUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(TxtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TxtPassCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(JboRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnTambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSimpan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBatal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUbah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnKeluar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>                        

    private void TxtKodeUserKeyPressed(java.awt.event.KeyEvent evt) {                                       
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TxtNamaUser.requestFocus();
        }
        //        // TODO add your handling code here:
    }                                      

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {                                         
        btnTambah.setEnabled(true);
        btnSimpan.setEnabled(false);
        btnBatal.setEnabled(false);      // TODO add your handling code here:
    }                                        

    private void TxtNamaUserKeyPressed(java.awt.event.KeyEvent evt) {                                       
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TxtPassword.requestFocus();
        }
        //        // TODO add your handling code here:
    }                                      

    private void TxtPasswordActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void TxtPasswordKeyPressed(java.awt.event.KeyEvent evt) {                                       
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TxtPassCon.requestFocus();
        }             // TODO add your handling code here:
    }                                      

    private void jTableUserMouseClicked(java.awt.event.MouseEvent evt) {                                        
        TxtKodeUser.setText(model.getValueAt(jTableUser.getSelectedRow(), 0) + "");
        TxtNamaUser.setText(model.getValueAt(jTableUser.getSelectedRow(), 1) + "");
        TxtPassword.setText(model.getValueAt(jTableUser.getSelectedRow(), 2) + "");
        TxtPassCon.setText(model.getValueAt(jTableUser.getSelectedRow(), 2) + "");
        JboRole.setSelectedItem(model.getValueAt(jTableUser.getSelectedRow(), 3) + "Administratot");

        enabledForm();
        TxtKodeUser.setEnabled(false);
        btnUbah.setEnabled(true);
        btnHapus.setEnabled(true);// TODO add your handling code here:
    }                                       

    private void TxtPassConKeyPressed(java.awt.event.KeyEvent evt) {                                      
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String Pass = TxtPassword.getText();
            String Pass1 = TxtPassCon.getText();

            if (Pass.equals(Pass1)) {
                JboRole.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "Password Belum Sama", "Pesan", JOptionPane.ERROR_MESSAGE);
            }
        }      // TODO add your handling code here:
    }                                     

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {                                          
        //deklarasikan variabel
        //deklarasikan variabel
        String kodeuser = TxtKodeUser.getText();
        String namauser = TxtNamaUser.getText();
        String pass = TxtPassword.getText();
        String pasc = TxtPassCon.getText();
        String rulex = JboRole.getSelectedItem().toString();
        String flagx;

        //deklarasikan tanggal saat ini
        java.util.Date tanggal = new java.util.Date();
        java.text.SimpleDateFormat setTanggal = new java.text.SimpleDateFormat("yyyy-MM-dd");
        String TglNow = setTanggal.format(tanggal);

        //untuk melakukan validasi jika Panjang kode user tidak sama dengan 8 digit
        if (kodeuser.length() != 8) {
            JOptionPane.showMessageDialog(null, "Panjang Karakter Kode User Kurang dari 8 Digit");
            TxtKodeUser.requestFocus();
        } else {
            if ((kodeuser.isEmpty()) && (namauser.isEmpty()) && (pass.isEmpty()) && (pasc.isEmpty()) && (rulex.isEmpty())) {
                JOptionPane.showMessageDialog(null, "Ada kolom yang masih kosong");
                TxtKodeUser.requestFocus();
            } else {
                try {
                    if (null == rulex) {
                        flagx = "3";
                    } else //untuk melakukan pengecekan dan penandaan pada setiap rule
                    {
                        flagx = switch (rulex) {
                            case "Administrator" ->
                                "1";
                            case "Operator" ->
                                "2";
                            default ->
                                "3";
                        };
                    }
                    //insert data pada database
                    Connection conn = (Connection) KoneksiDB.getKoneksi(); //pemanggilan clas koneksi
                    Statement str = conn.createStatement();
                    str.executeUpdate("insert into tbl_user values('" + kodeuser + "','" + namauser + "','" + pass + "','" + rulex + "','" + TglNow + "','" + TglNow + "','" + kodeuser + "','" + flagx + "')");

                    JOptionPane.showMessageDialog(null, "Data Sudah Di Simpan", "Insert", JOptionPane.INFORMATION_MESSAGE);

                    getData(); //menampilkan data
                    bersikandata(); //bersihkan data

                } catch (SQLException err) {
                    JOptionPane.showMessageDialog(this, "Koneksi Gagal\n" + err.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }                                         

    private void aturKolomTabel() {
        TableColumn column;
        jTableUser.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        column = jTableUser.getColumnModel().getColumn(0);
        column.setPreferredWidth(100);
        column = jTableUser.getColumnModel().getColumn(1);
        column.setPreferredWidth(100);
        column = jTableUser.getColumnModel().getColumn(2);
        column.setPreferredWidth(100);
        column = jTableUser.getColumnModel().getColumn(3);
        column.setPreferredWidth(100);
        column = jTableUser.getColumnModel().getColumn(4);
        column.setPreferredWidth(150);
        column = jTableUser.getColumnModel().getColumn(5);
        column.setPreferredWidth(150);
        column = jTableUser.getColumnModel().getColumn(6);
        column.setPreferredWidth(150);
        column = jTableUser.getColumnModel().getColumn(7);
        column.setPreferredWidth(50);
    }
    
        private void disabledForm() {
        TxtKodeUser.setEnabled(false);
        TxtNamaUser.setEnabled(false);
        TxtPassword.setEnabled(false);
        TxtPassCon.setEnabled(false);
        JboRole.setEnabled(false);

    }
        
            private void enabledForm() {
        TxtKodeUser.setEnabled(true);
        TxtNamaUser.setEnabled(true);
        TxtPassword.setEnabled(true);
        TxtPassCon.setEnabled(true);
        JboRole.setEnabled(true);

//        btnSimpan.setEnabled(true);
//        btnBatal.setEnabled(true);
//        btnUbah.setEnabled(true);
//        btnHapus.setEnabled(true);
    }
    
    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String kodeuser = TxtKodeUser.getText();
        if (kodeuser.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Kode User Tidak Boleh Kosong");
            TxtKodeUser.requestFocus();
        } else if (JOptionPane.showConfirmDialog(null, "Apakah Yakin Akan di Hapus ?", "Informasi", JOptionPane.INFORMATION_MESSAGE) == JOptionPane.OK_OPTION) {
            try {
                Connection conn = (Connection) KoneksiDB.getKoneksi();
                Statement mysql = conn.createStatement();
                mysql.executeUpdate("Delete from tbl_user where kode_user='" + kodeuser + "'");

                JOptionPane.showMessageDialog(this, "Data berhasil Di Hapus", "Success", JOptionPane.INFORMATION_MESSAGE);

                bersikandata();
                getData();

            } catch (SQLException e) {

                JOptionPane.showMessageDialog(this, "Delete data gagal\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }// TODO add your handling code here:
    }                                        

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        dispose();       // TODO add your handling code here:
    }                                         

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {                                        
        String kodeuser = TxtKodeUser.getText();
        String namauser = TxtNamaUser.getText();
        String pass = TxtPassword.getText();
        String pasc = TxtPassCon.getText();
        String rulex = JboRole.getSelectedItem().toString();
        String flagx;

        if (kodeuser.equals("")) {
            JOptionPane.showMessageDialog(null, "Kode User Masih Kosong");
            TxtKodeUser.requestFocus();
        } else if (namauser.equals("")) {
            JOptionPane.showMessageDialog(null, "Nama User Masing Kosong");
            TxtNamaUser.requestFocus();
        } else if (pass.equals("")) {
            JOptionPane.showMessageDialog(null, "Password Masih Kosong");
            TxtPassword.requestFocus();
        } else if (pasc.equals("")) {
            JOptionPane.showMessageDialog(null, "Konfirmasi Pass Masih Kosong");
            TxtPassCon.requestFocus();
        } else if (kodeuser.length() >= 8) {
            JOptionPane.showMessageDialog(null, "Panjang Karakter Kurang dari 8 Digit");
            TxtKodeUser.requestFocus();
        } else {
            //deklarasikan tanggal saat ini
            java.util.Date tanggal = new java.util.Date();
            java.text.SimpleDateFormat setTanggal = new java.text.SimpleDateFormat("yyyy-MM-dd");
            String TglNow = setTanggal.format(tanggal);

            try {
                if (null == rulex) {
                    flagx = "3";
                } else {
                    flagx = switch (rulex) {
                        case "Administrator" ->
                        "1";
                        case "Operator" ->
                        "2";
                        default ->
                        "3";
                    };
                }

                String Pass = TxtPassword.getText();
                String Pass1 = TxtPassCon.getText();

                if (Pass.equals(Pass1)) {
                    Connection conn = (Connection) KoneksiDB.getKoneksi();
                    Statement str = conn.createStatement();
                    str.executeUpdate("UPDATE tbl_user set nama_user='" + namauser + "', pass='" + Pass1 + "', role='" + rulex + "',date_modify='" + TglNow + "',flag='" + flagx + "' where kode_user='" + kodeuser + "'");

                    JOptionPane.showMessageDialog(null, "Data Sudah Di ubah", "Insert", JOptionPane.INFORMATION_MESSAGE);

                    getData(); //menampilkan data
                    bersikandata(); //bersihkan data

                } else {
                    JOptionPane.showMessageDialog(null, "Password Belum Sama", "Pesan", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException err) {
                JOptionPane.showMessageDialog(this, "Koneksi Gagal\n" + err.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

        }
        // TODO add your handling code here:
    }                                       

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {                                          
        btnTambah.setEnabled(false);
        btnSimpan.setEnabled(true);
        btnBatal.setEnabled(true);
        btnHapus.setEnabled(false);
        btnUbah.setEnabled(false);
        enabledForm();
        bersikandata();
        // TODO add your handling code here:
    }                                         

    private void JboRoleActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void TxtKodeUserActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

        private void formWindowActivated(java.awt.event.WindowEvent evt) {
        JboRole.removeAllItems();
        JboRole.addItem("Administrator");
        JboRole.addItem("Operator");
        JboRole.addItem("Staff IT");

        disabledForm();

        btnSimpan.setEnabled(false);
        btnBatal.setEnabled(false);
        btnUbah.setEnabled(false);
        btnHapus.setEnabled(false);
    }  
        
        
        
        public void bersikandata() {
        TxtKodeUser.setText("");
        TxtNamaUser.setText("");
        TxtPassword.setText("");
        TxtPassCon.setText("");
        TxtKodeUser.requestFocus();
    }
        
        public void getData() {
        //mengahapus isi tabel
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        try {
            //membuat statment memanggil tabel Tuser
            stat = (Statement) KoneksiDB.getKoneksi().createStatement();
            //Koneksi_DB adalah java class yang di buat yang di dalam nya ada class getKoneksi
            sql = "select * from tbl_user";
            rs = stat.executeQuery(sql);

            //penelusuran per baris
            while (rs.next()) {
                Object[] obj = new Object[8];
                obj[0] = rs.getString("kode_user");
                obj[1] = rs.getString("nama_user");
                obj[2] = rs.getString("pass");
                obj[3] = rs.getString("role");
                obj[4] = rs.getString("date_create");
                obj[5] = rs.getString("date_modify");
                obj[6] = rs.getString("user_modify");
                obj[7] = rs.getString("flag");
                model.addRow(obj);
            }

        } catch (SQLException err) {
            JOptionPane.showMessageDialog(null, err.getMessage());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JComboBox<String> JboRole;
    private javax.swing.JTextField TxtKodeUser;
    private javax.swing.JTextField TxtNamaUser;
    private javax.swing.JTextField TxtPassCon;
    private javax.swing.JTextField TxtPassword;
    private javax.swing.JButton btnBatal;
    private javax.swing.JToggleButton btnHapus;
    private javax.swing.JToggleButton btnKeluar;
    private javax.swing.JToggleButton btnSimpan;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUser;
    // End of variables declaration                   
}
